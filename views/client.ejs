<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>P A N D O R A</title>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/p5.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/addons/p5.sound.min.js"></script>
  <script src="https://unpkg.com/moonjs"></script>
  <link href="https://fonts.googleapis.com/css?family=Rubik:300,400,500,700|Josefin+Sans:400,700|Prompt:400,500,700|Roboto+Mono:400,400i,500,500i"
    rel="stylesheet">

  <script src="/scripts/terminal.min.js"></script>

  <script src="/js/dependencies/sails.io.js"></script>
  <link rel="stylesheet" href="/styles/main.css">

</head>

<body>

  <!-- modal -->
  <div id="myModal" class="modal">
    <div class="modal-content">
      <div id="terminal"></div>
      <br>
    </div>
  </div>
  <!-- end modal -->

  <!-- app -->
  <div id="app">
    <div id="navbar" class="absolute">
      <ul class="planet-list">
        <li m-on:click="setPlanet('sun')" class="sun">Sol</li>
        <li m-on:click="setPlanet('mercury')" class="mercury">Mercurio</li>
        <li m-on:click="setPlanet('venus')" class="venus">Venus</li>
        <li m-on:click="setPlanet('earth')" class="earth">Tierra</li>
        <li m-on:click="setPlanet('mars')" class="mars">Marte</li>
        <li m-on:click="setPlanet('jupiter')" class="jupiter">Júpiter</li>
        <li m-on:click="setPlanet('saturn')" class="saturn">Saturno</li>
        <li m-on:click="setPlanet('uranus')" class="uranus">Urano</li>
        <li m-on:click="setPlanet('neptune')" class="neptune">Neptuno</li>
      </ul>
    </div>

    <div class="absolute info-container">
      <div id="header" class="">
        <h1 class="planet transparent">{{ info.name }}</h1>
      </div>

      <div id="info-panel">
        <div id="info" class="" 1>
          <p id="data">{{ info.gravity }}</p>
          <p id="detail">Gravedad (m/s^2)</p>
        </div>
        <div id="info" 2>
          <p id="data">{{ weight }}</p>
          <p id="detail">Tu masa (Kg.)</p>
        </div>
      </div>
      <br>
      <div id="info-panel">
        <div id="info" class="" 1>
          <p id="data">~ {{ round(weight * info.gravity, 2) }} N</p>
          <p id="detail">Tu peso en {{ info.name }}
            <br> (Newtons)</p>
        </div>
        <div id="info">
          <p id="data">vs</p>
        </div>

        <div id="info" 2>
          <p id="data">~ {{ round(weight * 9.8, 2) }} N</p>
          <p id="detail">Tu peso en la Tierra
            <br> (Newtons)</p>
        </div>
      </div>

      <div id="velocidad">
        <div m-on:click="setNormalVel()">
          <a id="text_vel">Desactivar</a> velocidad real</div>
        <div m-on:click="setPause()">
          <a id="text_pause">Pausar</a>
        </div>
      </div>


    </div>

    <div id="info-planet" class="absolute">
      <h5>Información</h5>
      <ul id="plantet_list_info">
        <li>Día: {{ info.day }}
          <span class="little_text">(días terrestres)</span>
        </li>
        <li>Año: {{ info.year }}
          <span class="little_text">(años terrestres)</span>
        </li>
        <li>¿Habitable?: {{ info.habitable }}</li>
        <li>Lunas: {{ info.moons }}</li>
      </ul>
    </div>

    <div m-on:click="setPause()" id="canvas"></div>
  </div>
  <!-- end app -->

  <script src="/scripts/p5.js"></script>
  <script src="/scripts/terminal.min.js"></script>

  <!-- app -->
  <script>
    var $ = document
    var modal = $.getElementById('myModal')
    var t,
      lis = $.getElementsByTagName('LI')

    console.log(lis)
    for (var i = 0; i < lis.length; i++) {
      lis[i].addEventListener('mouseover', () => {
        guiSelect.play()
      })
      lis[i].addEventListener('click', () => {
        guiClick.play()
      })
    }

    /**
    * Iniciar terminal
    */
    var initTerminal = function () {

      $.getElementById('terminal').innerHTML = ''
      t = new Terminal({
        dom: $.getElementById('terminal'),
        speed: 45
      })

      // Escribir en la terminal
      t.run(function (o) {
        o.output('P A N D O R A  / 2 0 1 7').wait(300)
        o.newline()
        o.output('¡Hola! Es un gusto tenerte de vuelta...').wait(300)
        o.newline()
        o.newline()
        o.output(`${(new Date)}` + ' : Iniciando sistemas...').wait(300)
        o.newline()
        o.output(`${(new Date)}` + ' : Iniciando registros...').wait(300)
        o.newline()


        o.output(`${(new Date)}` + ' : Sistema iniciado.').wait(300)
        o.del(3).output('do. ').wait(1000)
        o.newline()

        o.output(`${(new Date)}` + ' : Por favor, ubícate en el punto indicado.')
        o.del(9).output('indicado.').wait(200).del(1).output('. ').wait(800)
        o.newline()

        o.output(`${(new Date)}` + ' : Leyendo datos...').wait(800)
        o.newline()
      });
    }

    // Moon object
    var app = new Moon({
      el: '#app',
      hooks: {
        init: function () {
          planet = 'earth'
          initTerminal()
        }
      },
      data: {
        info: {
          name: 'Tierra',
          gravity: 9.8,
          day: 1,
          year: 1,
          habitable: 'Sí',
          moons: 1
        },
        weight: 0
      },
      methods: {
        // Seleccionar nuevo planeta
        setPlanet: function (planet) {
          app.set('info', {
            name: planets[planet].name,
            gravity: planets[planet].gravity,
            day: planets[planet].day,
            year: planets[planet].year,
            habitable: planet === 'earth' ? 'Sí' : 'No',
            moons: planets[planet].satelites
          })
          theta = 0
          window.planet = planet
        },
        // Redondear números
        round: function (value, decimals) {
          return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals)
        },
        // Velocidad "normal"
        setNormalVel: function () {
          document.getElementById('text_vel').innerHTML = !normalVel ? 'Activar' : 'Desactivar'
          normalVel = normalVel ? false : true
        },
        // Pausar rotación
        setPause: function () {
          document.getElementById('text_pause').innerHTML = !pause ? 'Continuar' : 'Pausar'
          if (pause) pause = false;
          else pause = true;
        }
      }
    })

    /**
     *  Obtener peso (Socket)
     */
    io.socket.on('updateWeight', (msg) => {
      if (msg !== null) {
        if (parseFloat(msg.weight) === 0) {
          backgroundSound.stop()
          modal.style.display = "block"
          initTerminal()
          startSound.loop()
        } else {
          startSound.stop()
          backgroundSound.loop()
          modal.style.display = "none"
        }
        app.set('weight', parseFloat(msg.weight))
      }
    })

  </script>

</body>

</html>
